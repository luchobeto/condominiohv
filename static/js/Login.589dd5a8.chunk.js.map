{"version":3,"sources":["components/ListErrors.js","components/Login.js"],"names":["ListErrors","errors","this","props","className","Object","keys","map","key","React","PureComponent","Login","changeEmail","ev","onChangeEmail","target","value","changePassword","onChangePassword","submitForm","email","password","preventDefault","onSubmit","onUnload","to","autoComplete","type","placeholder","onChange","disabled","inProgress","connect","state","auth","dispatch","UPDATE_FIELD_AUTH","LOGIN","payload","agent","Auth","login","LOGIN_PAGE_UNLOADED"],"mappings":"wNAEMA,E,4JACJ,WACE,IAAMC,EAASC,KAAKC,MAAMF,OAC1B,OAAIA,EAEA,oBAAIG,UAAU,iBAAd,SAEIC,OAAOC,KAAKL,GAAQM,KAAI,SAAAC,GACtB,OACE,+BACGA,EADH,IACSP,EAAOO,KADPA,QASZ,S,GAlBYC,IAAMC,eAuBhBV,O,wICDTW,E,kDACJ,aAAgB,IAAD,8BACb,gBACKC,YAAc,SAAAC,GAAE,OAAI,EAAKV,MAAMW,cAAcD,EAAGE,OAAOC,QAC5D,EAAKC,eAAiB,SAAAJ,GAAE,OAAI,EAAKV,MAAMe,iBAAiBL,EAAGE,OAAOC,QAClE,EAAKG,WAAa,SAACC,EAAOC,GAAR,OAAqB,SAAAR,GACrCA,EAAGS,iBACH,EAAKnB,MAAMoB,SAASH,EAAOC,KANhB,E,wDAUf,WACEnB,KAAKC,MAAMqB,a,oBAGb,WACE,IAAMJ,EAAQlB,KAAKC,MAAMiB,MACnBC,EAAWnB,KAAKC,MAAMkB,SAC5B,OACE,qBAAKjB,UAAU,YAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,MAAf,SAEE,sBAAKA,UAAU,iCAAf,UACE,oBAAIA,UAAU,iBAAd,yBACA,mBAAGA,UAAU,iBAAb,SACE,cAAC,IAAD,CAAMqB,GAAG,YAAT,oCAKF,cAAC,IAAD,CAAYxB,OAAQC,KAAKC,MAAMF,SAE/B,sBAAMsB,SAAUrB,KAAKiB,WAAWC,EAAOC,GAAvC,SACE,qCAEE,0BAAUjB,UAAU,aAApB,SACE,uBACEA,UAAU,+BACVsB,aAAa,WACbC,KAAK,QACLC,YAAY,QACZZ,MAAOI,GAAS,GAChBS,SAAU3B,KAAKU,gBAGnB,0BAAUR,UAAU,aAApB,SACE,uBACEA,UAAU,+BACVuB,KAAK,WACLD,aAAa,mBACbE,YAAY,WACZZ,MAAOK,GAAY,GACnBQ,SAAU3B,KAAKe,mBAGnB,wBACEb,UAAU,uCACVuB,KAAK,SACLG,SAAU5B,KAAKC,MAAM4B,WAHvB,2C,GAxDEtB,IAAMC,eA0EXsB,uBAvFS,SAAAC,GAAK,OAAIA,EAAMC,QAEZ,SAAAC,GAAQ,MAAK,CACtCrB,cAAe,SAAAE,GAAK,OAClBmB,EAAS,CAAER,KAAMS,IAAmB5B,IAAK,QAASQ,WACpDE,iBAAkB,SAAAF,GAAK,OACrBmB,EAAS,CAAER,KAAMS,IAAmB5B,IAAK,WAAYQ,WACvDO,SAAU,SAACH,EAAOC,GAAR,OACRc,EAAS,CAAER,KAAMU,IAAOC,QAASC,IAAMC,KAAKC,MAAMrB,EAAOC,MAC3DG,SAAU,kBACRW,EAAS,CAAER,KAAMe,UA6ENV,CAA6CrB","file":"static/js/Login.589dd5a8.chunk.js","sourcesContent":["import React from 'react';\n\nclass ListErrors extends React.PureComponent {\n  render() {\n    const errors = this.props.errors;\n    if (errors) {\n      return (\n        <ul className=\"error-messages\">\n          {\n            Object.keys(errors).map(key => {\n              return (\n                <li key={key}>\n                  {key} {errors[key]}\n                </li>\n              );\n            })\n          }\n        </ul>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default ListErrors;\n","import { Link } from 'react-router-dom'\nimport ListErrors from './ListErrors'\nimport React from 'react'\nimport agent from '../agent'\nimport { connect } from 'react-redux'\nimport {\n  UPDATE_FIELD_AUTH,\n  LOGIN,\n  LOGIN_PAGE_UNLOADED\n} from '../constants/actionTypes'\n\nconst mapStateToProps = state => state.auth\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeEmail: value =>\n    dispatch({ type: UPDATE_FIELD_AUTH, key: 'email', value }),\n  onChangePassword: value =>\n    dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\n  onSubmit: (email, password) =>\n    dispatch({ type: LOGIN, payload: agent.Auth.login(email, password) }),\n  onUnload: () =>\n    dispatch({ type: LOGIN_PAGE_UNLOADED })\n})\n\nclass Login extends React.PureComponent {\n  constructor () {\n    super()\n    this.changeEmail = ev => this.props.onChangeEmail(ev.target.value)\n    this.changePassword = ev => this.props.onChangePassword(ev.target.value)\n    this.submitForm = (email, password) => ev => {\n      ev.preventDefault()\n      this.props.onSubmit(email, password)\n    }\n  }\n\n  componentWillUnmount () {\n    this.props.onUnload()\n  }\n\n  render () {\n    const email = this.props.email\n    const password = this.props.password\n    return (\n      <div className='auth-page'>\n        <div className='container page'>\n          <div className='row'>\n\n            <div className='col-md-6 offset-md-3 col-xs-12'>\n              <h1 className='text-xs-center'>Registrarse</h1>\n              <p className='text-xs-center'>\n                <Link to='/register'>\n                  Necesito una Cuenta?\n                </Link>\n              </p>\n\n              <ListErrors errors={this.props.errors} />\n\n              <form onSubmit={this.submitForm(email, password)}>\n                <fieldset>\n\n                  <fieldset className='form-group'>\n                    <input\n                      className='form-control form-control-lg'\n                      autoComplete='username'\n                      type='email'\n                      placeholder='Email'\n                      value={email || ''}\n                      onChange={this.changeEmail} />\n                  </fieldset>\n\n                  <fieldset className='form-group'>\n                    <input\n                      className='form-control form-control-lg'\n                      type='password'\n                      autoComplete='current-password'\n                      placeholder='Password'\n                      value={password || ''}\n                      onChange={this.changePassword} />\n                  </fieldset>\n\n                  <button\n                    className='btn btn-lg btn-primary pull-xs-right'\n                    type='submit'\n                    disabled={this.props.inProgress}>\n                    Registrarse\n                  </button>\n\n                </fieldset>\n              </form>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n"],"sourceRoot":""}