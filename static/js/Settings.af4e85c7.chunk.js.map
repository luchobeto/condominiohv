{"version":3,"sources":["components/ListErrors.js","components/Settings.js"],"names":["ListErrors","errors","this","props","className","Object","keys","map","key","React","PureComponent","SettingsForm","currentUser","state","image","username","bio","email","password","updateState","field","ev","newState","assign","target","value","setState","submitForm","preventDefault","user","onSubmitForm","onSubmit","type","placeholder","onChange","rows","autoComplete","disabled","inProgress","Settings","onClick","onClickLogout","connect","settings","common","dispatch","LOGOUT","SETTINGS_SAVED","payload","agent","Auth","save","onUnload","SETTINGS_PAGE_UNLOADED"],"mappings":"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","file":"static/js/Settings.af4e85c7.chunk.js","sourcesContent":["import React from 'react';\n\nclass ListErrors extends React.PureComponent {\n  render() {\n    const errors = this.props.errors;\n    if (errors) {\n      return (\n        <ul className=\"error-messages\">\n          {\n            Object.keys(errors).map(key => {\n              return (\n                <li key={key}>\n                  {key} {errors[key]}\n                </li>\n              );\n            })\n          }\n        </ul>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default ListErrors;\n","import ListErrors from './ListErrors'\nimport React from 'react'\nimport agent from '../agent'\nimport { connect } from 'react-redux'\nimport {\n  SETTINGS_SAVED,\n  SETTINGS_PAGE_UNLOADED,\n  LOGOUT\n} from '../constants/actionTypes'\n\nclass SettingsForm extends React.PureComponent {\n  constructor (props) {\n    super(props)\n    const { currentUser } = props\n    this.state = {\n      image: ((currentUser && currentUser.image) || 'https://static.productionready.io/images/smiley-cyrus.jpg') || '',\n      username: (currentUser && currentUser.username) || '',\n      bio: (currentUser && currentUser.bio) || '',\n      email: (currentUser && currentUser.email) || '',\n      password: (currentUser && currentUser.password) || ''\n    }\n\n    this.updateState = field => ev => {\n      const state = this.state\n      const newState = Object.assign({}, state, { [field]: ev.target.value })\n      this.setState(newState)\n    }\n\n    this.submitForm = ev => {\n      ev.preventDefault()\n\n      const user = Object.assign({}, this.state)\n      if (!user.password) {\n        delete user.password\n      }\n\n      this.props.onSubmitForm(user)\n    }\n  }\n\n  render () {\n    const { image, username, bio, email } = this.state\n\n    return (\n      <form onSubmit={this.submitForm}>\n        <fieldset>\n\n          <fieldset className='form-group'>\n            <input\n              className='form-control'\n              type='text'\n              placeholder='URL de tu Foto'\n              value={image || ''}\n              onChange={this.updateState('image')}\n            />\n          </fieldset>\n\n          <fieldset className='form-group'>\n            <input\n              className='form-control form-control-lg'\n              type='text'\n              placeholder='Usuario'\n              value={username || ''}\n              onChange={this.updateState('username')}\n            />\n          </fieldset>\n\n          <fieldset className='form-group'>\n            <textarea\n              className='form-control form-control-lg'\n              rows='8'\n              placeholder='Breve biografía sobre ti'\n              value={bio || ''}\n              onChange={this.updateState('bio')}\n            />\n          </fieldset>\n\n          <fieldset className='form-group'>\n            <input\n              className='form-control form-control-lg'\n              autoComplete='username'\n              type='email'\n              placeholder='Email'\n              value={email || ''}\n              onChange={this.updateState('email')}\n            />\n          </fieldset>\n\n          <fieldset className='form-group'>\n            <input\n              className='form-control form-control-lg'\n              type='password'\n              autoComplete='current-password'\n              placeholder='Nuevo Password'\n              value={this.state.password}\n              onChange={this.updateState('password')}\n            />\n          </fieldset>\n\n          <button\n            className='btn btn-lg btn-primary pull-xs-right'\n            type='submit'\n            disabled={this.state.inProgress}\n          >\n            Modificar\n          </button>\n\n        </fieldset>\n      </form>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state.settings,\n  currentUser: state.common.currentUser\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onClickLogout: () => dispatch({ type: LOGOUT }),\n  onSubmitForm: user =>\n    dispatch({ type: SETTINGS_SAVED, payload: agent.Auth.save(user) }),\n  onUnload: () => dispatch({ type: SETTINGS_PAGE_UNLOADED })\n})\n\nclass Settings extends React.PureComponent {\n  render () {\n    return (\n      <div className='settings-page'>\n        <div className='container page'>\n          <div className='row'>\n            <div className='col-md-6 offset-md-3 col-xs-12'>\n\n              <h1 className='text-xs-center'>Tu configuración</h1>\n\n              <ListErrors errors={this.props.errors} />\n\n              <SettingsForm\n                currentUser={this.props.currentUser}\n                onSubmitForm={this.props.onSubmitForm}\n              />\n\n              <hr />\n\n              <button\n                className='btn btn-outline-danger'\n                onClick={this.props.onClickLogout}\n              >\n                O haga click para cerrar sesión.\n              </button>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings)\n"],"sourceRoot":""}