{"version":3,"sources":["components/ListErrors.js","components/Editor.js"],"names":["ListErrors","errors","this","props","className","Object","keys","map","key","React","PureComponent","Editor","updateFieldEvent","ev","onUpdateField","target","value","changeTitle","changeDescription","changeBody","changeTagInput","watchForEnter","keyCode","preventDefault","onAddTag","removeTagHandler","tag","onRemoveTag","submitForm","article","title","description","body","tagList","slug","articleSlug","promise","agent","Articles","update","assign","create","onSubmit","prevProps","match","params","onUnload","onLoad","get","type","placeholder","onChange","rows","tagInput","onKeyUp","onClick","disabled","inProgress","connect","state","editor","dispatch","ADD_TAG","payload","EDITOR_PAGE_LOADED","REMOVE_TAG","ARTICLE_SUBMITTED","EDITOR_PAGE_UNLOADED","UPDATE_FIELD_EDITOR"],"mappings":"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","file":"static/js/Editor.893e67b5.chunk.js","sourcesContent":["import React from 'react';\n\nclass ListErrors extends React.PureComponent {\n  render() {\n    const errors = this.props.errors;\n    if (errors) {\n      return (\n        <ul className=\"error-messages\">\n          {\n            Object.keys(errors).map(key => {\n              return (\n                <li key={key}>\n                  {key} {errors[key]}\n                </li>\n              );\n            })\n          }\n        </ul>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default ListErrors;\n","import ListErrors from './ListErrors'\nimport React from 'react'\nimport agent from '../agent'\nimport { connect } from 'react-redux'\nimport {\n  ADD_TAG,\n  EDITOR_PAGE_LOADED,\n  REMOVE_TAG,\n  ARTICLE_SUBMITTED,\n  EDITOR_PAGE_UNLOADED,\n  UPDATE_FIELD_EDITOR\n} from '../constants/actionTypes'\n\nconst mapStateToProps = state => ({\n  ...state.editor\n})\n\nconst mapDispatchToProps = dispatch => ({\n  onAddTag: () =>\n    dispatch({ type: ADD_TAG }),\n  onLoad: payload =>\n    dispatch({ type: EDITOR_PAGE_LOADED, payload }),\n  onRemoveTag: tag =>\n    dispatch({ type: REMOVE_TAG, tag }),\n  onSubmit: payload =>\n    dispatch({ type: ARTICLE_SUBMITTED, payload }),\n  onUnload: payload =>\n    dispatch({ type: EDITOR_PAGE_UNLOADED }),\n  onUpdateField: (key, value) =>\n    dispatch({ type: UPDATE_FIELD_EDITOR, key, value })\n})\n\nclass Editor extends React.PureComponent {\n  constructor () {\n    super()\n\n    const updateFieldEvent =\n      key => ev => this.props.onUpdateField(key, ev.target.value)\n    this.changeTitle = updateFieldEvent('title')\n    this.changeDescription = updateFieldEvent('description')\n    this.changeBody = updateFieldEvent('body')\n    this.changeTagInput = updateFieldEvent('tagInput')\n\n    this.watchForEnter = ev => {\n      if (ev.keyCode === 13) {\n        ev.preventDefault()\n        this.props.onAddTag()\n      }\n    }\n\n    this.removeTagHandler = tag => () => {\n      this.props.onRemoveTag(tag)\n    }\n\n    this.submitForm = ev => {\n      ev.preventDefault()\n      const article = {\n        title: this.props.title,\n        description: this.props.description,\n        body: this.props.body,\n        tagList: this.props.tagList\n      }\n\n      const slug = { slug: this.props.articleSlug }\n      const promise = this.props.articleSlug\n        ? agent.Articles.update(Object.assign(article, slug))\n        : agent.Articles.create(article)\n\n      this.props.onSubmit(promise)\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    if (prevProps.match.params.slug !== this.props.match.params.slug) {\n      if (this.props.match.params.slug) {\n        this.props.onUnload()\n        return this.props.onLoad(agent.Articles.get(this.props.match.params.slug))\n      }\n      this.props.onLoad(null)\n    }\n  }\n\n  componentDidMount () {\n    if (this.props.match.params.slug) {\n      return this.props.onLoad(agent.Articles.get(this.props.match.params.slug))\n    }\n    this.props.onLoad(null)\n  }\n\n  componentWillUnmount () {\n    this.props.onUnload()\n  }\n\n  render () {\n    return (\n      <div className='editor-page'>\n        <div className='container page'>\n          <div className='row'>\n            <div className='col-md-10 offset-md-1 col-xs-12'>\n\n              <ListErrors errors={this.props.errors} />\n\n              <form>\n                <fieldset>\n\n                  <fieldset className='form-group'>\n                    <input\n                      className='form-control form-control-lg'\n                      type='text'\n                      placeholder='Título del Artículo'\n                      value={this.props.title || ''}\n                      onChange={this.changeTitle} />\n                  </fieldset>\n\n                  <fieldset className='form-group'>\n                    <input\n                      className='form-control'\n                      type='text'\n                      placeholder=\"De qué trata este artículo?\"\n                      value={this.props.description || ''}\n                      onChange={this.changeDescription} />\n                  </fieldset>\n\n                  <fieldset className='form-group'>\n                    <textarea\n                      className='form-control'\n                      rows='8'\n                      placeholder='Escriba su artículo (en resumen)'\n                      value={this.props.body || ''}\n                      onChange={this.changeBody} />\n                  </fieldset>\n\n                  <fieldset className='form-group'>\n                    <input\n                      className='form-control'\n                      type='text'\n                      placeholder='Ingrese etiquetas'\n                      value={this.props.tagInput || ''}\n                      onChange={this.changeTagInput}\n                      onKeyUp={this.watchForEnter} />\n\n                    <div className='tag-list'>\n                      {\n                        (this.props.tagList || []).map(tag => {\n                          return (\n                            <span className='tag-default tag-pill' key={tag}>\n                              <i className='ion-close-round'\n                                onClick={this.removeTagHandler(tag)} />\n                              {tag}\n                            </span>\n                          )\n                        })\n                      }\n                    </div>\n                  </fieldset>\n\n                  <button\n                    className='btn btn-lg pull-xs-right btn-primary'\n                    type='button'\n                    disabled={this.props.inProgress}\n                    onClick={this.submitForm}>\n                    Publicar \n                  </button>\n\n                </fieldset>\n              </form>\n\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Editor)\n"],"sourceRoot":""}