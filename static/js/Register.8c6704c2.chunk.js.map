{"version":3,"sources":["components/ListErrors.js","components/Register.js"],"names":["ListErrors","errors","this","props","className","Object","keys","map","key","React","PureComponent","Register","changeEmail","ev","onChangeEmail","target","value","changePassword","onChangePassword","changeUsername","onChangeUsername","submitForm","username","email","password","preventDefault","onSubmit","onUnload","to","type","placeholder","onChange","autoComplete","disabled","inProgress","connect","state","auth","dispatch","UPDATE_FIELD_AUTH","payload","agent","Auth","register","REGISTER","REGISTER_PAGE_UNLOADED"],"mappings":"wNAEMA,E,4JACJ,WACE,IAAMC,EAASC,KAAKC,MAAMF,OAC1B,OAAIA,EAEA,oBAAIG,UAAU,iBAAd,SAEIC,OAAOC,KAAKL,GAAQM,KAAI,SAAAC,GACtB,OACE,+BACGA,EADH,IACSP,EAAOO,KADPA,QASZ,S,GAlBYC,IAAMC,eAuBhBV,O,+ICGTW,E,kDACJ,aAAgB,IAAD,8BACb,gBACKC,YAAc,SAAAC,GAAE,OAAI,EAAKV,MAAMW,cAAcD,EAAGE,OAAOC,QAC5D,EAAKC,eAAiB,SAAAJ,GAAE,OAAI,EAAKV,MAAMe,iBAAiBL,EAAGE,OAAOC,QAClE,EAAKG,eAAiB,SAAAN,GAAE,OAAI,EAAKV,MAAMiB,iBAAiBP,EAAGE,OAAOC,QAClE,EAAKK,WAAa,SAACC,EAAUC,EAAOC,GAAlB,OAA+B,SAAAX,GAC/CA,EAAGY,iBACH,EAAKtB,MAAMuB,SAASJ,EAAUC,EAAOC,KAP1B,E,wDAWf,WACEtB,KAAKC,MAAMwB,a,oBAGb,WACE,IAAMJ,EAAQrB,KAAKC,MAAMoB,MACnBC,EAAWtB,KAAKC,MAAMqB,SACtBF,EAAWpB,KAAKC,MAAMmB,SAE5B,OACE,qBAAKlB,UAAU,YAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,MAAf,SAEE,sBAAKA,UAAU,iCAAf,UACE,oBAAIA,UAAU,iBAAd,yBACA,mBAAGA,UAAU,iBAAb,SACE,cAAC,IAAD,CAAMwB,GAAG,SAAT,oCAKF,cAAC,IAAD,CAAY3B,OAAQC,KAAKC,MAAMF,SAE/B,sBAAMyB,SAAUxB,KAAKmB,WAAWC,EAAUC,EAAOC,GAAjD,SACE,qCAEE,0BAAUpB,UAAU,aAApB,SACE,uBACEA,UAAU,+BACVyB,KAAK,OACLC,YAAY,UACZd,MAAOd,KAAKC,MAAMmB,UAAY,GAC9BS,SAAU7B,KAAKiB,mBAGnB,0BAAUf,UAAU,aAApB,SACE,uBACEA,UAAU,+BACVyB,KAAK,QACLG,aAAa,WACbF,YAAY,QACZd,MAAOd,KAAKC,MAAMoB,OAAS,GAC3BQ,SAAU7B,KAAKU,gBAGnB,0BAAUR,UAAU,aAApB,SACE,uBACEA,UAAU,+BACVyB,KAAK,WACLG,aAAa,mBACbF,YAAY,WACZd,MAAOd,KAAKC,MAAMqB,UAAY,GAC9BO,SAAU7B,KAAKe,mBAGnB,wBACEb,UAAU,uCACVyB,KAAK,SACLI,SAAU/B,KAAKC,MAAM+B,WAHvB,2C,GApEKzB,IAAMC,eAsFdyB,uBAvGS,SAAAC,GAAK,sBAAUA,EAAMC,SAElB,SAAAC,GAAQ,MAAK,CACtCxB,cAAe,SAAAE,GAAK,OAClBsB,EAAS,CAAET,KAAMU,IAAmB/B,IAAK,QAASQ,WACpDE,iBAAkB,SAAAF,GAAK,OACrBsB,EAAS,CAAET,KAAMU,IAAmB/B,IAAK,WAAYQ,WACvDI,iBAAkB,SAAAJ,GAAK,OACrBsB,EAAS,CAAET,KAAMU,IAAmB/B,IAAK,WAAYQ,WACvDU,SAAU,SAACJ,EAAUC,EAAOC,GAC1B,IAAMgB,EAAUC,IAAMC,KAAKC,SAASrB,EAAUC,EAAOC,GACrDc,EAAS,CAAET,KAAMe,IAAUJ,aAE7Bb,SAAU,kBACRW,EAAS,CAAET,KAAMgB,UAyFNV,CAA6CxB","file":"static/js/Register.8c6704c2.chunk.js","sourcesContent":["import React from 'react';\n\nclass ListErrors extends React.PureComponent {\n  render() {\n    const errors = this.props.errors;\n    if (errors) {\n      return (\n        <ul className=\"error-messages\">\n          {\n            Object.keys(errors).map(key => {\n              return (\n                <li key={key}>\n                  {key} {errors[key]}\n                </li>\n              );\n            })\n          }\n        </ul>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nexport default ListErrors;\n","import { Link } from 'react-router-dom'\nimport ListErrors from './ListErrors'\nimport React from 'react'\nimport agent from '../agent'\nimport { connect } from 'react-redux'\nimport {\n  UPDATE_FIELD_AUTH,\n  REGISTER,\n  REGISTER_PAGE_UNLOADED\n} from '../constants/actionTypes'\n\nconst mapStateToProps = state => ({ ...state.auth })\n\nconst mapDispatchToProps = dispatch => ({\n  onChangeEmail: value =>\n    dispatch({ type: UPDATE_FIELD_AUTH, key: 'email', value }),\n  onChangePassword: value =>\n    dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value }),\n  onChangeUsername: value =>\n    dispatch({ type: UPDATE_FIELD_AUTH, key: 'username', value }),\n  onSubmit: (username, email, password) => {\n    const payload = agent.Auth.register(username, email, password)\n    dispatch({ type: REGISTER, payload })\n  },\n  onUnload: () =>\n    dispatch({ type: REGISTER_PAGE_UNLOADED })\n})\n\nclass Register extends React.PureComponent {\n  constructor () {\n    super()\n    this.changeEmail = ev => this.props.onChangeEmail(ev.target.value)\n    this.changePassword = ev => this.props.onChangePassword(ev.target.value)\n    this.changeUsername = ev => this.props.onChangeUsername(ev.target.value)\n    this.submitForm = (username, email, password) => ev => {\n      ev.preventDefault()\n      this.props.onSubmit(username, email, password)\n    }\n  }\n\n  componentWillUnmount () {\n    this.props.onUnload()\n  }\n\n  render () {\n    const email = this.props.email\n    const password = this.props.password\n    const username = this.props.username\n\n    return (\n      <div className='auth-page'>\n        <div className='container page'>\n          <div className='row'>\n\n            <div className='col-md-6 offset-md-3 col-xs-12'>\n              <h1 className='text-xs-center'>Inscribirse</h1>\n              <p className='text-xs-center'>\n                <Link to='/login'>\n                  Ya tengo una Cuenta?\n                </Link>\n              </p>\n\n              <ListErrors errors={this.props.errors} />\n\n              <form onSubmit={this.submitForm(username, email, password)}>\n                <fieldset>\n\n                  <fieldset className='form-group'>\n                    <input\n                      className='form-control form-control-lg'\n                      type='text'\n                      placeholder='Usuario'\n                      value={this.props.username || ''}\n                      onChange={this.changeUsername} />\n                  </fieldset>\n\n                  <fieldset className='form-group'>\n                    <input\n                      className='form-control form-control-lg'\n                      type='email'\n                      autoComplete='username'\n                      placeholder='Email'\n                      value={this.props.email || ''}\n                      onChange={this.changeEmail} />\n                  </fieldset>\n\n                  <fieldset className='form-group'>\n                    <input\n                      className='form-control form-control-lg'\n                      type='password'\n                      autoComplete='current-password'\n                      placeholder='Password'\n                      value={this.props.password || ''}\n                      onChange={this.changePassword} />\n                  </fieldset>\n\n                  <button\n                    className='btn btn-lg btn-primary pull-xs-right'\n                    type='submit'\n                    disabled={this.props.inProgress}>\n                    Inscribirse\n                  </button>\n\n                </fieldset>\n              </form>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\n"],"sourceRoot":""}